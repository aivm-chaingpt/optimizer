name: CI - Docker images

on:
  push:
    branches:
      - devops/pipeline

env:
  AWS_REGION: us-east-1
  REPOSITORY: aivm/optimizer
  REPOSITORY_WORKSPACE: aivm/rust-optimizer
  AWS_ACC_ID: 205930620613
  TAG: 0.16.2

concurrency:
  group: build_images_development
  cancel-in-progress: true

jobs:
  build_amd:    
    name: Build Images - development
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: development
    timeout-minutes: 30 
    steps:
      - name: Configure AWS credentials using OIDC
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::205930620613:role/chaingpt_github_oidc_role
          aws-region: us-east-1
          role-session-name: chaingpt_github_oidc_role
          
      - name: Build - Git Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup docker buildx
        run: |
          docker buildx create --use --name multiarch --platform linux/amd64,linux/arm64
          
      - name: Build - Get ECR Repository
        run: |
          aws ecr describe-repositories --region $AWS_REGION --repository-names $REPOSITORY > /dev/null 2>&1 || \
            aws ecr create-repository --region $AWS_REGION  --repository-name $REPOSITORY

      - name: Build - Get ECR Repository workspaces
        run: |
          aws ecr describe-repositories --region $AWS_REGION --repository-names $REPOSITORY_WORKSPACE > /dev/null 2>&1 || \
            aws ecr create-repository --region $AWS_REGION  --repository-name $REPOSITORY_WORKSPACE
            
      - name: Build - Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push - x86_64
        id: build-image-base-image-x86-64
        env:
          DOCKER_BUILDKIT: 1
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker buildx build --pull --platform linux/amd64 -t $REPOSITORY:$TAG --target rust-optimizer --push .
          docker tag $REPOSITORY:$TAG $AWS_ACC_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY:$TAG
          docker push $AWS_ACC_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY:$TAG

  build_arm:    
    name: Build Images - development
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: development
    timeout-minutes: 30 
    steps:
      - name: Configure AWS credentials using OIDC
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::205930620613:role/chaingpt_github_oidc_role
          aws-region: us-east-1
          role-session-name: chaingpt_github_oidc_role
          
      - name: Build - Git Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup docker buildx
        run: |
          docker buildx create --use --name multiarch --platform linux/amd64,linux/arm64
          
      - name: Build - Get ECR Repository
        run: |
          aws ecr describe-repositories --region $AWS_REGION --repository-names $REPOSITORY > /dev/null 2>&1 || \
            aws ecr create-repository --region $AWS_REGION  --repository-name $REPOSITORY

      - name: Build - Get ECR Repository workspaces
        run: |
          aws ecr describe-repositories --region $AWS_REGION --repository-names $REPOSITORY_WORKSPACE > /dev/null 2>&1 || \
            aws ecr create-repository --region $AWS_REGION  --repository-name $REPOSITORY_WORKSPACE
            
      - name: Build - Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push - arm64
        id: build-image-base-image-arm64
        env:
          DOCKER_BUILDKIT: 1
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker buildx build --pull --platform linux/arm64 -t $REPOSITORY-arm64:$TAG --target rust-optimizer --push .
          docker tag $REPOSITORY-arm64:$TAG $AWS_ACC_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY-arm64:$TAG
          docker push $AWS_ACC_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY-arm64:$TAG
          docker tag $REPOSITORY-arm64:$TAG $AWS_ACC_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_WORKSPACE-arm64:$TAG
          docker push $AWS_ACC_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_WORKSPACE-arm64:$TAG